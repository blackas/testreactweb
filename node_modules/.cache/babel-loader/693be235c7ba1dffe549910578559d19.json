{"ast":null,"code":"import _classCallCheck from \"/Users/gimnam-ug/Desktop/stockweb/client/stocklab-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gimnam-ug/Desktop/stockweb/client/stocklab-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gimnam-ug/Desktop/stockweb/client/stocklab-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gimnam-ug/Desktop/stockweb/client/stocklab-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gimnam-ug/Desktop/stockweb/client/stocklab-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gimnam-ug/Desktop/stockweb/client/stocklab-react/src/components/CodeChart.js\";\nimport React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.stock.react';\nvar ConvasJs = CanvasJSReact.ConvasJS;\nvar CanvasJSStockChart = CanvasJSReact.CanvasJSStockChart;\n\nvar CodeChart = /*#__PURE__*/function (_Component) {\n  _inherits(CodeChart, _Component);\n\n  function CodeChart(props) {\n    var _this;\n\n    _classCallCheck(this, CodeChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CodeChart).call(this, props));\n    _this.state = {\n      dataPoints1: [],\n      dataPoints2: [],\n      dataPoints3: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(CodeChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this2 = this;\n\n      function fnTodate(strDate) {\n        var yyyyMMdd = String(strDate);\n        var strYear = yyyyMMdd.substring(0, 4);\n        var strMonth = yyyyMMdd.substring(4, 6);\n        var strDay = yyyyMMdd.substring(6, 8);\n        return new Date(Number(strYear), Number(strMonth), Number(strDay));\n      }\n\n      if (prevProps.code !== this.props.code) {\n        //console.log(\"CodeChart componentDidupdate\", this.props.code);\n        var api_url = \"http://127.0.0.1:5000/codes/\" + this.props.code + \"/sortflag/asc/price\";\n        fetch(api_url).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var count = data[\"count\"];\n          var price_info = [];\n          price_info = data[\"price_list\"];\n          var dps1 = [],\n              dps2 = [],\n              dps3 = [];\n\n          for (var i = 0; i < price_info.length; i++) {\n            dps1.push({\n              x: fnTodate(price_info[i].date),\n              y: [Number(price_info[i].open), Number(price_info[i].high), Number(price_info[i].low), Number(price_info[i].close)]\n            });\n            dps2.push({\n              x: fnTodate(price_info[i].date),\n              y: Number(price_info[i].volume_usd)\n            });\n            dps3.push({\n              x: fnTodate(price_info[i].date),\n              y: Number(price_info[i].close)\n            });\n\n            _this2.setState({\n              isLoaded: true,\n              dataPoints1: dps1,\n              dataPoints2: dps2,\n              dataPoints3: dps3\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var options = {\n        theme: \"light2\",\n        title: {\n          text: \"주식 차트\"\n        },\n        charts: [{\n          height: 200,\n          axisX: {\n            lineThickness: 5,\n            tickLength: 0,\n            labelFormatter: function labelFormatter(e) {\n              return \"\";\n            },\n            crosshair: {\n              enabled: true,\n              snapToDataPoint: true,\n              labelFormatter: function labelFormatter(e) {\n                return \"\";\n              }\n            }\n          },\n          axisY: {\n            title: \"주가\",\n            tickLength: 0\n          },\n          toolTip: {\n            shared: true\n          },\n          data: [{\n            name: \"가격 (in KRW)\",\n            yValueFormatString: \"#,###.##원\",\n            type: \"candlestick\",\n            dataPoints: this.state.dataPoints1\n          }]\n        }, {\n          axisX: {\n            crosshair: {\n              enabled: true,\n              snapToDataPoint: true\n            }\n          },\n          axisY: {\n            title: \"누적거래량\",\n            tickLength: 0\n          },\n          toolTip: {\n            shared: true\n          },\n          data: [{\n            name: \"Volume\",\n            yValueFormatString: \"#,###.##\",\n            type: \"column\",\n            dataPoints: this.state.dataPoints2\n          }]\n        }],\n        navigator: {\n          animationEnabled: true,\n          data: [{\n            dataPoints: this.state.dataPoints3\n          }],\n          slider: {\n            minimum: new Date(\"2018-05-01\"),\n            maximum: new Date(\"2018-07-01\")\n          }\n        }\n      };\n      var containerProps = {\n        width: \"50%\",\n        height: \"600px\",\n        margin: \"auto\"\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, // Reference: https://reactjs.org/docs/conditional-rendering.html#inline-if-with-logical--operator\n      this.state.isLoaded && /*#__PURE__*/React.createElement(CanvasJSStockChart, {\n        containerProps: containerProps,\n        options: options\n        /* onRef = {ref => this.chart = ref} */\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return CodeChart;\n}(Component);\n\nexport default CodeChart;","map":{"version":3,"sources":["/Users/gimnam-ug/Desktop/stockweb/client/stocklab-react/src/components/CodeChart.js"],"names":["React","Component","CanvasJSReact","ConvasJs","ConvasJS","CanvasJSStockChart","CodeChart","props","state","dataPoints1","dataPoints2","dataPoints3","isLoaded","prevProps","prevState","snapshot","fnTodate","strDate","yyyyMMdd","String","strYear","substring","strMonth","strDay","Date","Number","code","api_url","fetch","then","res","json","data","count","price_info","dps1","dps2","dps3","i","length","push","x","date","y","open","high","low","close","volume_usd","setState","options","theme","title","text","charts","height","axisX","lineThickness","tickLength","labelFormatter","e","crosshair","enabled","snapToDataPoint","axisY","toolTip","shared","name","yValueFormatString","type","dataPoints","navigator","animationEnabled","slider","minimum","maximum","containerProps","width","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CanvasJSReact from './canvasjs.stock.react';\nvar ConvasJs = CanvasJSReact.ConvasJS;\nvar CanvasJSStockChart = CanvasJSReact.CanvasJSStockChart;\n \n\nclass CodeChart extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            dataPoints1:[],\n\t\t\tdataPoints2:[],\n\t\t\tdataPoints3:[],\n\t\t\tisLoaded:false\n        };\n    }\n    componentDidMount(){\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n\t\tfunction fnTodate(strDate){\n\t\t\tvar yyyyMMdd = String(strDate);\n\t\t\tvar strYear  = yyyyMMdd.substring(0,4);\n\t\t\tvar strMonth = yyyyMMdd.substring(4,6);\n\t\t\tvar strDay   = yyyyMMdd.substring(6,8);\n\t\t\treturn new Date(Number(strYear), Number(strMonth), Number(strDay))\n\t\t}\n       if(prevProps.code !== this.props.code){\n            //console.log(\"CodeChart componentDidupdate\", this.props.code);\n            let api_url = \"http://127.0.0.1:5000/codes/\"+this.props.code+\"/sortflag/asc/price\";\n            fetch(api_url)\n                .then(res => res.json())\n                .then(data =>{\n\t\t\t\t\tvar count = data[\"count\"]\n\t\t\t\t\tvar price_info = []\n\t\t\t\t\tprice_info = data[\"price_list\"]\n\t\t\t\t\tvar dps1 = [], dps2 = [], dps3 =[];\n\t\t\t\t\tfor (var i = 0; i < price_info.length; i++){\n\t\t\t\t\t\tdps1.push({\n\t\t\t\t\t\t\tx:fnTodate(price_info[i].date),\n\t\t\t\t\t\t\ty:[\n\t\t\t\t\t\t\t\tNumber(price_info[i].open),\n\t\t\t\t\t\t\t\tNumber(price_info[i].high),\n\t\t\t\t\t\t\t\tNumber(price_info[i].low),\n\t\t\t\t\t\t\t\tNumber(price_info[i].close)\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdps2.push({\n\t\t\t\t\t\t\tx:fnTodate(price_info[i].date),\n\t\t\t\t\t\t\ty:Number(price_info[i].volume_usd)\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdps3.push({\n\t\t\t\t\t\t\tx:fnTodate(price_info[i].date),\n\t\t\t\t\t\t\ty:Number(price_info[i].close)\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoaded : true,\n\t\t\t\t\t\tdataPoints1 : dps1,\n\t\t\t\t\t\tdataPoints2 : dps2,\n\t\t\t\t\t\tdataPoints3 : dps3\n\t\t\t\t\t});\n\t\t\t\t\t}\n                });\n        }\n    }\n\n    render(){\n      const options = {\n      theme: \"light2\",\n      title:{\n        text:\"주식 차트\"\n      },\n      charts: [{\n\t\theight: 200,\n        axisX: {\n          lineThickness: 5,\n          tickLength: 0,\n          labelFormatter: function(e) {\n            return \"\";\n          },\n          crosshair: {\n            enabled: true,\n            snapToDataPoint: true,\n            labelFormatter: function(e) {\n              return \"\";\n            }\n          }\n        },\n        axisY: {\n          title: \"주가\",\n          tickLength: 0\n        },\n        toolTip: {\n          shared: true\n        },\n        data: [{\n          name: \"가격 (in KRW)\",\n          yValueFormatString: \"#,###.##원\",\n          type: \"candlestick\",\n          dataPoints : this.state.dataPoints1\n        }]\n      },{\n        axisX: {\n          crosshair: {\n            enabled: true,\n            snapToDataPoint: true\n          }\n        },\n        axisY: {\n          title: \"누적거래량\",\n          tickLength: 0\n        },\n        toolTip: {\n          shared: true\n        },\n        data: [{\n          name: \"Volume\",\n          yValueFormatString: \"#,###.##\",\n          type: \"column\",\n          dataPoints : this.state.dataPoints2\n        }]\n      }],\n      navigator: {\n\t\tanimationEnabled: true,\n        data: [{\n          dataPoints: this.state.dataPoints3\n        }],\n        slider: {\n          minimum: new Date(\"2018-05-01\"),\n          maximum: new Date(\"2018-07-01\")\n        }\n      }\n    };\n    const containerProps = {\n      width: \"50%\",\n      height: \"600px\",\n      margin: \"auto\"\n    };\n        return (\n            <div>\n\t\t\t{\n            // Reference: https://reactjs.org/docs/conditional-rendering.html#inline-if-with-logical--operator\n            this.state.isLoaded && \n            <CanvasJSStockChart containerProps={containerProps} options = {options}\n              /* onRef = {ref => this.chart = ref} */\n            />\n            }\n\t\t\t\n            </div>\n        );\n    }\n}\n\nexport default CodeChart;"]},"metadata":{},"sourceType":"module"}